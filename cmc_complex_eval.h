// В пространстве имен numbers реализована функция eval

// Функции подается на вход польская инверсная запись выражения над комплексными
// числами с одной переменной и значение переменной. В качестве результата функция
// возвращает вычисленное значение.
// Каждый элемент польской записи находится в отдельном элементе вектора.
// Возможные ошибки при вычислении игнорируйте.

// В польской записи допускаются следующие элементы:
// -- Запись комплексного числа в виде (RE,IM).
// -- Обозначение переменной "z" (строчная латинская буква).
// -- Знаки бинарных операций +, -, *, /.
// -- Знак унарной операции !, которая заносит в стек элемент, находящийся на верхушке стека.
// -- Знак унарной операции ;, которая удаляет элемент с верхушки стека.
// -- Знак унарной операции ~, которая вычисляет комплексно-сопряженное число.
// -- Знак унарной операции #, которая меняет знак у числа.

// Каждая строка в массиве строк содержит ровно один элемент польской записи. Пробельные символы отсутствуют.
// Реализовано отображение из операций в действия с помощью отображения (std::map) анонимных функций.

#pragma once

#include <map>
#include <functional>
#include <vector>

#include "cmc_complex.h"
#include "cmc_complex_stack.h"

namespace numbers
{
    complex eval(const std::vector<std::string> &args, const complex &z);
};
